@isTest
private class AccountProcessorTest {

    @isTest
    private static void countContactsTest() {
        
        // Load test data
        List<Account> accounts = new List<Account>();
        for (Integer i=0; i<300; i++) {
            accounts.add(new Account(Name='Test Account' + i));
        }
        insert accounts;
		
        List<Contact> contacts = new List<Contact>();
        List<Id> accountIds = new List<Id>();
        for (Account acc: accounts) {
            contacts.add(new Contact(FirstName=acc.Name, LastName='TestContact', AccountId=acc.Id));
            accountIds.add(acc.Id);
        }
        insert contacts;
        
        // Perform the test
        Test.startTest();
        AccountProcessor.countContacts(accountIds);
        Test.stopTest();
        
        // Check the result
        List<Account> accs = [SELECT Id, Number_of_Contacts__c FROM Account];
        for (Account acc : accs) {
			System.assertEquals(1, acc.Number_of_Contacts__c, 'ERROR: At least 1 Account record with incorrect Contact count');            
        }
    }
}

//Future class example
public without sharing class AccountProcessor {
    
    @future
    public static void countContacts(List<Id> accountIds) {
	
		// Retrieve the Account records for the supplied Ids
        List<Account> accounts = [SELECT Id, (SELECT Id FROM Contacts) FROM Account 
                                  WHERE Id IN :accountIds];
								
		// Update the field with the size of each Contact collection
        for (Account acc : accounts) {
            acc.Number_of_Contacts__c = acc.Contacts.size();
        }
		
		// Update the modified Account records
        update accounts;
    }
}
